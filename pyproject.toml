# This project requires torch for the minimization library using tensors
# By default, the library will install CPU-only torch to avoid all cuda dependencies
#   poetry install --sync -E cpu
# If you need CUDA for torch, this is optional:
#   poetry install --sync -E cuda --with cuda
#
# This pyproject file is based on the repository:
#   https://github.com/lucaspar/poetry-torch/ 
[tool.poetry]
name = "mmt_multipole_inversion"
version = "1.0"
description = "Library to generate scan grid measurements from multipole sources and perform numerical inversions"
authors = ["D. Cortés-Ortuño <d.i.cortes@uu.nl>", "K. Fabian", "L. V. de Groot"]
license = "MIT"
readme = "README.md"
# package-mode = false

packages = [
    {include = "mmt_multipole_inversion"}
]

include = [
    # CUDA/C extensions must be included in the wheel distributions
    {path = "mmt_multipole_inversion/susceptibility_modules/cuda/*.so", format = "wheel"},
    {path = "mmt_multipole_inversion/susceptibility_modules/cuda/*.pyd", format = "wheel"},
]

[tool.poetry.build]
generate-setup-file = false
script = "build.py"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
numpy = ">=1.25"
scipy = "^1.7.0"
matplotlib = "^3.2"
numba = ">=0.56"
Cython = "^3.0.0"
pylops = ">=2.0.0"
pytorch-minimize = { git="https://github.com/rfeinman/pytorch-minimize.git", rev="master" }
torch = { version = "^2.2.1" }
# torchvision = { version="^0.17.1", optional = true }

# [tool.poetry.group.cpu.dependencies]
# torchvision = { version="^0.17.1", source = "torch_cpu", markers = "extra=='cpu' and extra!='gpu'" }
# pytorch-minimize = { git="https://github.com/rfeinman/pytorch-minimize.git", rev="master", markers = "extra=='cpu' and extra!='gpu'" }

[tool.poetry.group.dev.dependencies]
jupyter = "^1.1.0"
pytest = "^8.0.0"
requests = "^2.28.1"
Shapely = "^2.0.0"
jupytext = "^1.14.1"


[build-system]
requires = ["setuptools", "poetry-core>=1.8.0", "cython>3.0.0", "numpy>=1.23"]
build-backend = "poetry.core.masonry.api"
